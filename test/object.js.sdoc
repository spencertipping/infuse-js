Infuse objects.
See also the [Infuse object source](object-src.md).

These are instantiated like arrays and support a similar API:

var o = infuse({foo: 1, bar: 2, bif: 3});
var keys = o.keys();
o.size()                        -> 3
keys.size()                     -> 3
o.get('foo')                    -> 1

Also like arrays, you can `map` objects:

var mapped = o.map('_ + 1');
mapped.size()                   -> 3
mapped.get('foo')               -> 2
mapped.get('bar')               -> 3

And like any Infuse object, changes you make to the base will be reflected in
the mapped output:

o.push(4, 'baz')                -> o
o.size()                        -> 4
mapped.size()                   -> 4
mapped.get('baz')               -> 5

keys.size()                     -> 4
keys.get().sort().join(',')     -> 'bar,baz,bif,foo'

o.push(5, 'five') .push(6, 'six');
o.push(7, 'seven').push(8, 'eight');

keys.get().sort().join(',')     -> 'bar,baz,bif,eight,five,foo,seven,six'
mapped.get('five')              -> 6
mapped.get('six')               -> 7
mapped.get('seven')             -> 8
mapped.get('eight')             -> 9
